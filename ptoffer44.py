"""
剑指 Offer 44. 数字序列中某一位的数字
数字以0123456789101112131415…的格式序列化到一个字符序列中。在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。

请写一个函数，求任意第n位对应的数字。
"""

"""
这个题简单来说，还是最简单的找规律，排除第一位的0，然后可以发现；
123456789 总共9个数，都是1位的
101112...9899 总共90*2个数,都是两位的
100101102...998999 总共900*3个数,都是三位的
...
那么如果求第n个数,用这个数循环去寻找就知道是在哪个范围里了,比方说第365个数,因为第一个数是0,所以需要排除掉这个.
364 - 9 - 180 = 175 < 900*3,那么这个数一定是处于三位数的组合中. 175/3 = 58...1
那么这个数应该是158里边的第一个数,即1.
反正大概就是这个意思,其中的计算可能会有一点点误差,在写代码的时候再调节吧.
"""

def findNthDigit(n: int) -> int:
  digt = 1
  counter = 1
  n = n-1
  while n > digt * 9 * counter:
    n -= digt*9*counter
    digt *= 10
    counter += 1
  a,b = n//counter,n%counter
  targetNum = str(digt + a)[b]
  return int(targetNum)

if __name__ == '__main__':
    res = findNthDigit(2147483647)
    print(res)